<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="39" passed="34" failed="5" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\My Pc\eclipse-workspace\Final_exam_Selenium\test-output\html]]>
    </line>
  </reporter-output>
  <suite started-at="2023-05-27T21:43:58 EDT" name="tutorialsNinja test" finished-at="2023-05-27T21:52:24 EDT" duration-ms="505932">
    <groups>
      <group name="searchTests">
        <method signature="SearchProductsTest.verifySearchWithANonExistingProduct()[pri:1, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" name="verifySearchWithANonExistingProduct" class="tutorialsNinja.SearchProductsTest"/>
        <method signature="SearchProductsTest.verifySearchWithAnExistingProduct()[pri:2, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" name="verifySearchWithAnExistingProduct" class="tutorialsNinja.SearchProductsTest"/>
        <method signature="SearchProductsTest.verifyProductDisplayCount()[pri:3, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" name="verifyProductDisplayCount" class="tutorialsNinja.SearchProductsTest"/>
        <method signature="SearchProductsTest.verifyUsernavigatedToTHeSearchHomePage()[pri:4, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" name="verifyUsernavigatedToTHeSearchHomePage" class="tutorialsNinja.SearchProductsTest"/>
      </group> <!-- searchTests -->
      <group name="ForgottenPasswordPageUITest">
        <method signature="ForgottenPasswordTest.verifyForgottenPasswordPageUI()[pri:6, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" name="verifyForgottenPasswordPageUI" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- ForgottenPasswordPageUITest -->
      <group name="addPrdctsFrmFrmPrdctCmprsnHmPgetest">
        <method signature="AddToCartTest.addPrdctsFrmPrdctCmprsnHmPge()[pri:7, instance:tutorialsNinja.AddToCartTest@59252cb6]" name="addPrdctsFrmPrdctCmprsnHmPge" class="tutorialsNinja.AddToCartTest"/>
      </group> <!-- addPrdctsFrmFrmPrdctCmprsnHmPgetest -->
      <group name="removeItemsTest">
        <method signature="AddToCartTest.VerifyRemoveAnItemFromCartWhnOnePrdctAdded()[pri:3, instance:tutorialsNinja.AddToCartTest@59252cb6]" name="VerifyRemoveAnItemFromCartWhnOnePrdctAdded" class="tutorialsNinja.AddToCartTest"/>
      </group> <!-- removeItemsTest -->
      <group name="checkoutNavTest">
        <method signature="CheckoutTest.verifyUserNavigateToCheckoutHomePgeWthNoPrdcts()[pri:1, instance:tutorialsNinja.CheckoutTest@56113384]" name="verifyUserNavigateToCheckoutHomePgeWthNoPrdcts" class="tutorialsNinja.CheckoutTest"/>
      </group> <!-- checkoutNavTest -->
      <group name="pswrdVisibilityTest">
        <method signature="LoginTest.checkPasswordVisibility()[pri:3, instance:tutorialsNinja.LoginTest@5d5f10b2]" name="checkPasswordVisibility" class="tutorialsNinja.LoginTest"/>
      </group> <!-- pswrdVisibilityTest -->
      <group name="registerWithInvPhoNmbrTest">
        <method signature="RegisterTest.registerWithInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:tutorialsNinja.RegisterTest@9ef8eb7]" name="registerWithInvalidPhoneNumber" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- registerWithInvPhoNmbrTest -->
      <group name="addItmsToWishListPageTest">
        <method signature="WishListTest.addItmsTWhshLstWthtLogin()[pri:2, instance:tutorialsNinja.WishListTest@4dc8caa7]" name="addItmsTWhshLstWthtLogin" class="tutorialsNinja.WishListTest"/>
      </group> <!-- addItmsToWishListPageTest -->
      <group name="resetPasswordTests">
        <method signature="ForgottenPasswordTest.resetPassForNonRegistredUsers(java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" name="resetPassForNonRegistredUsers" class="tutorialsNinja.ForgottenPasswordTest"/>
        <method signature="ForgottenPasswordTest.resetPasswordWithoutEmail()[pri:4, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" name="resetPasswordWithoutEmail" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- resetPasswordTests -->
      <group name="navigationTests">
        <method signature="ForgottenPasswordTest.verifyUserNavigatingToTheForgotPasswordPage(java.lang.String)[pri:1, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" name="verifyUserNavigatingToTheForgotPasswordPage" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- navigationTests -->
      <group name="differentWysTNavgToRgstrTest">
        <method signature="RegisterTest.VerifyDifferentWaysToNavigateToTheRegisterPage()[pri:5, instance:tutorialsNinja.RegisterTest@9ef8eb7]" name="VerifyDifferentWaysToNavigateToTheRegisterPage" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- differentWysTNavgToRgstrTest -->
      <group name="updateItemsTest">
        <method signature="AddToCartTest.verifyUpdateAnItem()[pri:4, instance:tutorialsNinja.AddToCartTest@59252cb6]" name="verifyUpdateAnItem" class="tutorialsNinja.AddToCartTest"/>
      </group> <!-- updateItemsTest -->
      <group name="updatePrdctQntTest">
        <method signature="AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@59252cb6]" name="verifyPrdctUpdtQunt" class="tutorialsNinja.AddToCartTest"/>
      </group> <!-- updatePrdctQntTest -->
      <group name="passwordVisibilityTest">
        <method signature="RegisterTest.VerifyThePasswordNotVisibleToTheSourcePage()[pri:4, instance:tutorialsNinja.RegisterTest@9ef8eb7]" name="VerifyThePasswordNotVisibleToTheSourcePage" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- passwordVisibilityTest -->
      <group name="unsuccessfulLoginAttemptsTest">
        <method signature="LoginTest.verifyTheNumberOfUnsuccessfulLoginAttempts()[pri:2, instance:tutorialsNinja.LoginTest@5d5f10b2]" name="verifyTheNumberOfUnsuccessfulLoginAttempts" class="tutorialsNinja.LoginTest"/>
      </group> <!-- unsuccessfulLoginAttemptsTest -->
      <group name="FrgtPaswrdNavigationTests">
        <method signature="ForgottenPasswordTest.verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd()[pri:2, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" name="verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- FrgtPaswrdNavigationTests -->
      <group name="registerWthCredTest">
        <method signature="RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@9ef8eb7]" name="registerWithCredentials" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- registerWthCredTest -->
      <group name="prvcyPlcyChckBxTest">
        <method signature="RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@9ef8eb7]" name="checkPrivacyPolicyCheckBox" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- prvcyPlcyChckBxTest -->
      <group name="pswrdLinkTest">
        <method signature="LoginTest.verifyForgottenPasswrdLinkDsp()[pri:5, instance:tutorialsNinja.LoginTest@5d5f10b2]" name="verifyForgottenPasswrdLinkDsp" class="tutorialsNinja.LoginTest"/>
      </group> <!-- pswrdLinkTest -->
      <group name="placeHolderTests">
        <method signature="ForgottenPasswordTest.verifyThePlaceHoldTextEmailAddress()[pri:5, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" name="verifyThePlaceHoldTextEmailAddress" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- placeHolderTests -->
      <group name="placeHoldersTest">
        <method signature="LoginTest.testLoginFieldsPlaceholders()[pri:4, instance:tutorialsNinja.LoginTest@5d5f10b2]" name="testLoginFieldsPlaceholders" class="tutorialsNinja.LoginTest"/>
      </group> <!-- placeHoldersTest -->
      <group name="loginWithCred(valid,invalid)">
        <method signature="LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2]" name="testLoginWithCredentials" class="tutorialsNinja.LoginTest"/>
      </group> <!-- loginWithCred(valid,invalid) -->
      <group name="rgstrWthExstngEmailAddrssTest">
        <method signature="RegisterTest.verifyRegisterWithAnExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.RegisterTest@9ef8eb7]" name="verifyRegisterWithAnExistingEmailAddress" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- rgstrWthExstngEmailAddrssTest -->
      <group name="couponFonctionalityTest">
        <method signature="CheckoutTest.verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@56113384]" name="verifyCouponfonctionality" class="tutorialsNinja.CheckoutTest"/>
      </group> <!-- couponFonctionalityTest -->
      <group name="couponFieldPlaceHolderTest">
        <method signature="CheckoutTest.verifycouponFieldPlaceHolder()[pri:3, instance:tutorialsNinja.CheckoutTest@56113384]" name="verifycouponFieldPlaceHolder" class="tutorialsNinja.CheckoutTest"/>
      </group> <!-- couponFieldPlaceHolderTest -->
    </groups>
    <test started-at="2023-05-27T21:43:58 EDT" name=" LoginTest" finished-at="2023-05-27T21:45:25 EDT" duration-ms="86254">
      <class name="tutorialsNinja.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:43:58 EDT" name="setUp" finished-at="2023-05-27T21:44:25 EDT" duration-ms="26674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:25 EDT" name="startExtent" finished-at="2023-05-27T21:44:25 EDT" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:25 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-27T21:44:27 EDT" duration-ms="1803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:27 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:44:30 EDT" duration-ms="3126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:30 EDT" name="tearDownR" finished-at="2023-05-27T21:44:30 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:30 EDT" name="setUp" finished-at="2023-05-27T21:44:35 EDT" duration-ms="5231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:35 EDT" name="startExtent" finished-at="2023-05-27T21:44:35 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:35 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-27T21:44:36 EDT" duration-ms="1068" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sun@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:36 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:44:37 EDT" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:37 EDT" name="tearDownR" finished-at="2023-05-27T21:44:37 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:37 EDT" name="setUp" finished-at="2023-05-27T21:44:42 EDT" duration-ms="5155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:42 EDT" name="startExtent" finished-at="2023-05-27T21:44:42 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:42 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-27T21:44:43 EDT" duration-ms="1589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sun@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:43 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:44:44 EDT" duration-ms="431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:44 EDT" name="tearDownR" finished-at="2023-05-27T21:44:44 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:44 EDT" name="setUp" finished-at="2023-05-27T21:44:49 EDT" duration-ms="5443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:49 EDT" name="startExtent" finished-at="2023-05-27T21:44:49 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:49 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-27T21:44:50 EDT" duration-ms="1066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:50 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:44:51 EDT" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:51 EDT" name="tearDownR" finished-at="2023-05-27T21:44:51 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:51 EDT" name="setUp" finished-at="2023-05-27T21:44:57 EDT" duration-ms="5855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:57 EDT" name="startExtent" finished-at="2023-05-27T21:44:57 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:57 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-27T21:44:57 EDT" duration-ms="892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:57 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:44:58 EDT" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:58 EDT" name="tearDownR" finished-at="2023-05-27T21:44:58 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:44:58 EDT" name="setUp" finished-at="2023-05-27T21:45:04 EDT" duration-ms="5812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:04 EDT" name="startExtent" finished-at="2023-05-27T21:45:04 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.verifyTheNumberOfUnsuccessfulLoginAttempts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyTheNumberOfUnsuccessfulLoginAttempts()[pri:2, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:04 EDT" name="verifyTheNumberOfUnsuccessfulLoginAttempts" finished-at="2023-05-27T21:45:05 EDT" duration-ms="990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheNumberOfUnsuccessfulLoginAttempts -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:05 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:45:05 EDT" duration-ms="522" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheNumberOfUnsuccessfulLoginAttempts status=SUCCESS method=LoginTest.verifyTheNumberOfUnsuccessfulLoginAttempts()[pri:2, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:05 EDT" name="tearDownR" finished-at="2023-05-27T21:45:05 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:05 EDT" name="setUp" finished-at="2023-05-27T21:45:11 EDT" duration-ms="5237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:11 EDT" name="startExtent" finished-at="2023-05-27T21:45:11 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.checkPasswordVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkPasswordVisibility()[pri:3, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:11 EDT" name="checkPasswordVisibility" finished-at="2023-05-27T21:45:12 EDT" duration-ms="1030" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Password is visible to the page source expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Password is visible to the page source expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at tutorialsNinja.LoginTest.checkPasswordVisibility(LoginTest.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPasswordVisibility -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:12 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:45:12 EDT" duration-ms="416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPasswordVisibility status=FAILURE method=LoginTest.checkPasswordVisibility()[pri:3, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:12 EDT" name="tearDownR" finished-at="2023-05-27T21:45:12 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:12 EDT" name="setUp" finished-at="2023-05-27T21:45:18 EDT" duration-ms="6135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:18 EDT" name="startExtent" finished-at="2023-05-27T21:45:18 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginFieldsPlaceholders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginFieldsPlaceholders()[pri:4, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:18 EDT" name="testLoginFieldsPlaceholders" finished-at="2023-05-27T21:45:18 EDT" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFieldsPlaceholders -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:18 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:45:19 EDT" duration-ms="404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFieldsPlaceholders status=SUCCESS method=LoginTest.testLoginFieldsPlaceholders()[pri:4, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:19 EDT" name="tearDownR" finished-at="2023-05-27T21:45:19 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:19 EDT" name="setUp" finished-at="2023-05-27T21:45:24 EDT" duration-ms="5420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:24 EDT" name="startExtent" finished-at="2023-05-27T21:45:24 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.verifyForgottenPasswrdLinkDsp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyForgottenPasswrdLinkDsp()[pri:5, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:24 EDT" name="verifyForgottenPasswrdLinkDsp" finished-at="2023-05-27T21:45:24 EDT" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswrdLinkDsp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:24 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:45:25 EDT" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswrdLinkDsp status=SUCCESS method=LoginTest.verifyForgottenPasswrdLinkDsp()[pri:5, instance:tutorialsNinja.LoginTest@5d5f10b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@5d5f10b2]" started-at="2023-05-27T21:45:25 EDT" name="tearDownR" finished-at="2023-05-27T21:45:25 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.LoginTest -->
    </test> <!--  LoginTest -->
    <test started-at="2023-05-27T21:45:25 EDT" name=" RegisterTest" finished-at="2023-05-27T21:46:51 EDT" duration-ms="86813">
      <class name="tutorialsNinja.RegisterTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:25 EDT" name="setUp" finished-at="2023-05-27T21:45:30 EDT" duration-ms="5580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:30 EDT" name="startExtent" finished-at="2023-05-27T21:45:30 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:30 EDT" name="registerWithCredentials" data-provider="RegistrationData" finished-at="2023-05-27T21:45:33 EDT" duration-ms="3327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yellow]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:33 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:45:34 EDT" duration-ms="527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithCredentials status=SUCCESS method=RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:34 EDT" name="tearDownR" finished-at="2023-05-27T21:45:34 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:34 EDT" name="setUp" finished-at="2023-05-27T21:45:40 EDT" duration-ms="6290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:40 EDT" name="startExtent" finished-at="2023-05-27T21:45:40 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:40 EDT" name="registerWithCredentials" data-provider="RegistrationData" finished-at="2023-05-27T21:45:43 EDT" duration-ms="2795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalidFirstName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inavalidlastname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sun@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abcd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sun]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:43 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:45:44 EDT" duration-ms="619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithCredentials status=SUCCESS method=RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:44 EDT" name="tearDownR" finished-at="2023-05-27T21:45:44 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:44 EDT" name="setUp" finished-at="2023-05-27T21:45:51 EDT" duration-ms="6953" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:51 EDT" name="startExtent" finished-at="2023-05-27T21:45:51 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.registerWithInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="registerWithInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:51 EDT" name="registerWithInvalidPhoneNumber" data-provider="invalidPhoneNumberData" finished-at="2023-05-27T21:45:54 EDT" duration-ms="2991" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yellow]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abcd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The user is able to register with an invalid phone number expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The user is able to register with an invalid phone number expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at tutorialsNinja.RegisterTest.registerWithInvalidPhoneNumber(RegisterTest.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithInvalidPhoneNumber -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:54 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:45:54 EDT" duration-ms="621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithInvalidPhoneNumber status=FAILURE method=RegisterTest.registerWithInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:tutorialsNinja.RegisterTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:54 EDT" name="tearDownR" finished-at="2023-05-27T21:45:54 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:45:54 EDT" name="setUp" finished-at="2023-05-27T21:46:00 EDT" duration-ms="6089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:00 EDT" name="startExtent" finished-at="2023-05-27T21:46:00 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.verifyRegisterWithAnExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyRegisterWithAnExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:00 EDT" name="verifyRegisterWithAnExistingEmailAddress" data-provider="existingEmailAddressData" finished-at="2023-05-27T21:46:05 EDT" duration-ms="4913" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yellow]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rezikabarech@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterWithAnExistingEmailAddress -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:05 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:46:06 EDT" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterWithAnExistingEmailAddress status=SUCCESS method=RegisterTest.verifyRegisterWithAnExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.RegisterTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:06 EDT" name="tearDownR" finished-at="2023-05-27T21:46:06 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:06 EDT" name="setUp" finished-at="2023-05-27T21:46:15 EDT" duration-ms="9420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:15 EDT" name="startExtent" finished-at="2023-05-27T21:46:15 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.VerifyThePasswordNotVisibleToTheSourcePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="VerifyThePasswordNotVisibleToTheSourcePage()[pri:4, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:15 EDT" name="VerifyThePasswordNotVisibleToTheSourcePage" finished-at="2023-05-27T21:46:20 EDT" duration-ms="4308" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[the password is visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: the password is visible expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at tutorialsNinja.RegisterTest.VerifyThePasswordNotVisibleToTheSourcePage(RegisterTest.java:145)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyThePasswordNotVisibleToTheSourcePage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:20 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:46:20 EDT" duration-ms="630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyThePasswordNotVisibleToTheSourcePage status=FAILURE method=RegisterTest.VerifyThePasswordNotVisibleToTheSourcePage()[pri:4, instance:tutorialsNinja.RegisterTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:20 EDT" name="tearDownR" finished-at="2023-05-27T21:46:20 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:20 EDT" name="setUp" finished-at="2023-05-27T21:46:29 EDT" duration-ms="8297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:29 EDT" name="startExtent" finished-at="2023-05-27T21:46:29 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.VerifyDifferentWaysToNavigateToTheRegisterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="VerifyDifferentWaysToNavigateToTheRegisterPage()[pri:5, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:29 EDT" name="VerifyDifferentWaysToNavigateToTheRegisterPage" finished-at="2023-05-27T21:46:32 EDT" duration-ms="3525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDifferentWaysToNavigateToTheRegisterPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:32 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:46:33 EDT" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDifferentWaysToNavigateToTheRegisterPage status=SUCCESS method=RegisterTest.VerifyDifferentWaysToNavigateToTheRegisterPage()[pri:5, instance:tutorialsNinja.RegisterTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:33 EDT" name="tearDownR" finished-at="2023-05-27T21:46:33 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:33 EDT" name="setUp" finished-at="2023-05-27T21:46:39 EDT" duration-ms="6391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:39 EDT" name="startExtent" finished-at="2023-05-27T21:46:39 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:39 EDT" name="checkPrivacyPolicyCheckBox" data-provider="privacyCheckBox" finished-at="2023-05-27T21:46:42 EDT" duration-ms="3023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[yes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPrivacyPolicyCheckBox -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:42 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:46:43 EDT" duration-ms="684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrivacyPolicyCheckBox status=SUCCESS method=RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:43 EDT" name="tearDownR" finished-at="2023-05-27T21:46:43 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:43 EDT" name="setUp" finished-at="2023-05-27T21:46:48 EDT" duration-ms="5747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:48 EDT" name="startExtent" finished-at="2023-05-27T21:46:48 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:48 EDT" name="checkPrivacyPolicyCheckBox" data-provider="privacyCheckBox" finished-at="2023-05-27T21:46:51 EDT" duration-ms="2473" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The user should not be able to register when the privacy policy checkbox is not selected expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The user should not be able to register when the privacy policy checkbox is not selected expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at tutorialsNinja.RegisterTest.checkPrivacyPolicyCheckBox(RegisterTest.java:229)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPrivacyPolicyCheckBox -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:51 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:46:51 EDT" duration-ms="480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrivacyPolicyCheckBox status=FAILURE method=RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@9ef8eb7]" started-at="2023-05-27T21:46:51 EDT" name="tearDownR" finished-at="2023-05-27T21:46:51 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.RegisterTest -->
    </test> <!--  RegisterTest -->
    <test started-at="2023-05-27T21:46:51 EDT" name=" ForgottenPasswordTest" finished-at="2023-05-27T21:48:25 EDT" duration-ms="93819">
      <class name="tutorialsNinja.ForgottenPasswordTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:46:51 EDT" name="setUp" finished-at="2023-05-27T21:46:57 EDT" duration-ms="5619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:46:57 EDT" name="startExtent" finished-at="2023-05-27T21:46:57 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.verifyUserNavigatingToTheForgotPasswordPage(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyUserNavigatingToTheForgotPasswordPage(java.lang.String)[pri:1, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:46:57 EDT" name="verifyUserNavigatingToTheForgotPasswordPage" data-provider="forgotPasswordData" finished-at="2023-05-27T21:46:59 EDT" duration-ms="2035" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserNavigatingToTheForgotPasswordPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:46:59 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:46:59 EDT" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserNavigatingToTheForgotPasswordPage status=SUCCESS method=ForgottenPasswordTest.verifyUserNavigatingToTheForgotPasswordPage(java.lang.String)[pri:1, instance:tutorialsNinja.ForgottenPasswordTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:46:59 EDT" name="tearDownR" finished-at="2023-05-27T21:46:59 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:46:59 EDT" name="setUp" finished-at="2023-05-27T21:47:10 EDT" duration-ms="10749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:10 EDT" name="startExtent" finished-at="2023-05-27T21:47:10 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd()[pri:2, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:10 EDT" name="verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd" finished-at="2023-05-27T21:47:11 EDT" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:11 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:47:12 EDT" duration-ms="488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd status=SUCCESS method=ForgottenPasswordTest.verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd()[pri:2, instance:tutorialsNinja.ForgottenPasswordTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:12 EDT" name="tearDownR" finished-at="2023-05-27T21:47:12 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:12 EDT" name="setUp" finished-at="2023-05-27T21:47:24 EDT" duration-ms="11816" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:24 EDT" name="startExtent" finished-at="2023-05-27T21:47:24 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.resetPassForNonRegistredUsers(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="resetPassForNonRegistredUsers(java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:24 EDT" name="resetPassForNonRegistredUsers" data-provider="emailData" finished-at="2023-05-27T21:47:27 EDT" duration-ms="3399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun@]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetPassForNonRegistredUsers -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:27 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:47:28 EDT" duration-ms="1458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetPassForNonRegistredUsers status=SUCCESS method=ForgottenPasswordTest.resetPassForNonRegistredUsers(java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.ForgottenPasswordTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:28 EDT" name="tearDownR" finished-at="2023-05-27T21:47:28 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:28 EDT" name="setUp" finished-at="2023-05-27T21:47:44 EDT" duration-ms="15745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:44 EDT" name="startExtent" finished-at="2023-05-27T21:47:44 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.resetPasswordWithoutEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="resetPasswordWithoutEmail()[pri:4, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:44 EDT" name="resetPasswordWithoutEmail" finished-at="2023-05-27T21:47:45 EDT" duration-ms="1175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetPasswordWithoutEmail -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:45 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:47:47 EDT" duration-ms="1541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetPasswordWithoutEmail status=SUCCESS method=ForgottenPasswordTest.resetPasswordWithoutEmail()[pri:4, instance:tutorialsNinja.ForgottenPasswordTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:47 EDT" name="tearDownR" finished-at="2023-05-27T21:47:47 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:47:47 EDT" name="setUp" finished-at="2023-05-27T21:48:02 EDT" duration-ms="15558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:02 EDT" name="startExtent" finished-at="2023-05-27T21:48:02 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.verifyThePlaceHoldTextEmailAddress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyThePlaceHoldTextEmailAddress()[pri:5, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:02 EDT" name="verifyThePlaceHoldTextEmailAddress" finished-at="2023-05-27T21:48:04 EDT" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePlaceHoldTextEmailAddress -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:04 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:48:12 EDT" duration-ms="8560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePlaceHoldTextEmailAddress status=SUCCESS method=ForgottenPasswordTest.verifyThePlaceHoldTextEmailAddress()[pri:5, instance:tutorialsNinja.ForgottenPasswordTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:12 EDT" name="tearDownR" finished-at="2023-05-27T21:48:12 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:12 EDT" name="setUp" finished-at="2023-05-27T21:48:24 EDT" duration-ms="11803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:24 EDT" name="startExtent" finished-at="2023-05-27T21:48:24 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.verifyForgottenPasswordPageUI()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyForgottenPasswordPageUI()[pri:6, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:24 EDT" name="verifyForgottenPasswordPageUI" finished-at="2023-05-27T21:48:25 EDT" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswordPageUI -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:25 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:48:25 EDT" duration-ms="557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswordPageUI status=SUCCESS method=ForgottenPasswordTest.verifyForgottenPasswordPageUI()[pri:6, instance:tutorialsNinja.ForgottenPasswordTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@40844aab]" started-at="2023-05-27T21:48:25 EDT" name="tearDownR" finished-at="2023-05-27T21:48:25 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.ForgottenPasswordTest -->
    </test> <!--  ForgottenPasswordTest -->
    <test started-at="2023-05-27T21:48:25 EDT" name=" SearchProductsTest" finished-at="2023-05-27T21:49:04 EDT" duration-ms="38550">
      <class name="tutorialsNinja.SearchProductsTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:25 EDT" name="setUp" finished-at="2023-05-27T21:48:33 EDT" duration-ms="7803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:33 EDT" name="startExtent" finished-at="2023-05-27T21:48:33 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.SearchProductsTest.verifySearchWithANonExistingProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifySearchWithANonExistingProduct()[pri:1, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:33 EDT" name="verifySearchWithANonExistingProduct" finished-at="2023-05-27T21:48:34 EDT" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithANonExistingProduct -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:34 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:48:34 EDT" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchWithANonExistingProduct status=SUCCESS method=SearchProductsTest.verifySearchWithANonExistingProduct()[pri:1, instance:tutorialsNinja.SearchProductsTest@1817f1eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:34 EDT" name="tearDownR" finished-at="2023-05-27T21:48:34 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:34 EDT" name="setUp" finished-at="2023-05-27T21:48:41 EDT" duration-ms="6909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:41 EDT" name="startExtent" finished-at="2023-05-27T21:48:41 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.SearchProductsTest.verifySearchWithAnExistingProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifySearchWithAnExistingProduct()[pri:2, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:41 EDT" name="verifySearchWithAnExistingProduct" finished-at="2023-05-27T21:48:43 EDT" duration-ms="1662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithAnExistingProduct -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:43 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:48:43 EDT" duration-ms="358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchWithAnExistingProduct status=SUCCESS method=SearchProductsTest.verifySearchWithAnExistingProduct()[pri:2, instance:tutorialsNinja.SearchProductsTest@1817f1eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:43 EDT" name="tearDownR" finished-at="2023-05-27T21:48:43 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:43 EDT" name="setUp" finished-at="2023-05-27T21:48:51 EDT" duration-ms="7225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:51 EDT" name="startExtent" finished-at="2023-05-27T21:48:51 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.SearchProductsTest.verifyProductDisplayCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyProductDisplayCount()[pri:3, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:51 EDT" name="verifyProductDisplayCount" finished-at="2023-05-27T21:48:53 EDT" duration-ms="2828" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Displayed product count doesn't match the selected count expected [100] but found [3]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Displayed product count doesn't match the selected count expected [100] but found [3]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1418)
at org.testng.Assert.assertEquals(Assert.java:1382)
at tutorialsNinja.SearchProductsTest.verifyProductDisplayCount(SearchProductsTest.java:116)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductDisplayCount -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:53 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:48:54 EDT" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductDisplayCount status=FAILURE method=SearchProductsTest.verifyProductDisplayCount()[pri:3, instance:tutorialsNinja.SearchProductsTest@1817f1eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:54 EDT" name="tearDownR" finished-at="2023-05-27T21:48:54 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:48:54 EDT" name="setUp" finished-at="2023-05-27T21:49:02 EDT" duration-ms="8095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:49:02 EDT" name="startExtent" finished-at="2023-05-27T21:49:02 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.SearchProductsTest.verifyUsernavigatedToTHeSearchHomePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyUsernavigatedToTHeSearchHomePage()[pri:4, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:49:02 EDT" name="verifyUsernavigatedToTHeSearchHomePage" finished-at="2023-05-27T21:49:03 EDT" duration-ms="1622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsernavigatedToTHeSearchHomePage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:49:03 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:49:04 EDT" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsernavigatedToTHeSearchHomePage status=SUCCESS method=SearchProductsTest.verifyUsernavigatedToTHeSearchHomePage()[pri:4, instance:tutorialsNinja.SearchProductsTest@1817f1eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.SearchProductsTest@1817f1eb]" started-at="2023-05-27T21:49:04 EDT" name="tearDownR" finished-at="2023-05-27T21:49:04 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.SearchProductsTest -->
    </test> <!--  SearchProductsTest -->
    <test started-at="2023-05-27T21:49:04 EDT" name=" CheckoutTest" finished-at="2023-05-27T21:50:16 EDT" duration-ms="71973">
      <class name="tutorialsNinja.CheckoutTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:04 EDT" name="setUp" finished-at="2023-05-27T21:49:11 EDT" duration-ms="7342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:11 EDT" name="startExtent" finished-at="2023-05-27T21:49:11 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verfyUsrNvgtChcktHmPge()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verfyUsrNvgtChcktHmPge()[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:11 EDT" name="verfyUsrNvgtChcktHmPge" finished-at="2023-05-27T21:49:12 EDT" duration-ms="1346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verfyUsrNvgtChcktHmPge -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:12 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:49:13 EDT" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verfyUsrNvgtChcktHmPge status=SUCCESS method=CheckoutTest.verfyUsrNvgtChcktHmPge()[pri:0, instance:tutorialsNinja.CheckoutTest@56113384] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:13 EDT" name="tearDownR" finished-at="2023-05-27T21:49:13 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:13 EDT" name="setUp" finished-at="2023-05-27T21:49:20 EDT" duration-ms="7049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:20 EDT" name="startExtent" finished-at="2023-05-27T21:49:20 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verifyUserNavigateToCheckoutHomePgeWthNoPrdcts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyUserNavigateToCheckoutHomePgeWthNoPrdcts()[pri:1, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:20 EDT" name="verifyUserNavigateToCheckoutHomePgeWthNoPrdcts" finished-at="2023-05-27T21:49:21 EDT" duration-ms="913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserNavigateToCheckoutHomePgeWthNoPrdcts -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:21 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:49:21 EDT" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserNavigateToCheckoutHomePgeWthNoPrdcts status=SUCCESS method=CheckoutTest.verifyUserNavigateToCheckoutHomePgeWthNoPrdcts()[pri:1, instance:tutorialsNinja.CheckoutTest@56113384] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:21 EDT" name="tearDownR" finished-at="2023-05-27T21:49:21 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:21 EDT" name="setUp" finished-at="2023-05-27T21:49:28 EDT" duration-ms="6552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:28 EDT" name="startExtent" finished-at="2023-05-27T21:49:28 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verifyCouponfonctionality(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:28 EDT" name="verifyCouponfonctionality" data-provider="couponCodes" finished-at="2023-05-27T21:49:36 EDT" duration-ms="8430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xyz123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCouponfonctionality -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:36 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:49:37 EDT" duration-ms="604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCouponfonctionality status=SUCCESS method=CheckoutTest.verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@56113384] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:37 EDT" name="tearDownR" finished-at="2023-05-27T21:49:37 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:37 EDT" name="setUp" finished-at="2023-05-27T21:49:46 EDT" duration-ms="9508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:46 EDT" name="startExtent" finished-at="2023-05-27T21:49:46 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verifyCouponfonctionality(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:46 EDT" name="verifyCouponfonctionality" data-provider="couponCodes" finished-at="2023-05-27T21:49:56 EDT" duration-ms="9878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCouponfonctionality -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:56 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:49:57 EDT" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCouponfonctionality status=SUCCESS method=CheckoutTest.verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@56113384] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:57 EDT" name="tearDownR" finished-at="2023-05-27T21:49:57 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:49:57 EDT" name="setUp" finished-at="2023-05-27T21:50:05 EDT" duration-ms="8599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:50:05 EDT" name="startExtent" finished-at="2023-05-27T21:50:05 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verifycouponFieldPlaceHolder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifycouponFieldPlaceHolder()[pri:3, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:50:05 EDT" name="verifycouponFieldPlaceHolder" finished-at="2023-05-27T21:50:15 EDT" duration-ms="9904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifycouponFieldPlaceHolder -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:50:15 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:50:16 EDT" duration-ms="644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifycouponFieldPlaceHolder status=SUCCESS method=CheckoutTest.verifycouponFieldPlaceHolder()[pri:3, instance:tutorialsNinja.CheckoutTest@56113384] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@56113384]" started-at="2023-05-27T21:50:16 EDT" name="tearDownR" finished-at="2023-05-27T21:50:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.CheckoutTest -->
    </test> <!--  CheckoutTest -->
    <test started-at="2023-05-27T21:50:16 EDT" name=" AddToCartTest" finished-at="2023-05-27T21:52:08 EDT" duration-ms="112562">
      <class name="tutorialsNinja.AddToCartTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:16 EDT" name="setUp" finished-at="2023-05-27T21:50:27 EDT" duration-ms="10751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:27 EDT" name="startExtent" finished-at="2023-05-27T21:50:27 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.VerifyRemoveAnItemFromCartWhnOnePrdctAdded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="VerifyRemoveAnItemFromCartWhnOnePrdctAdded()[pri:3, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:27 EDT" name="VerifyRemoveAnItemFromCartWhnOnePrdctAdded" finished-at="2023-05-27T21:50:35 EDT" duration-ms="8249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRemoveAnItemFromCartWhnOnePrdctAdded -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:35 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:50:35 EDT" duration-ms="516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyRemoveAnItemFromCartWhnOnePrdctAdded status=SUCCESS method=AddToCartTest.VerifyRemoveAnItemFromCartWhnOnePrdctAdded()[pri:3, instance:tutorialsNinja.AddToCartTest@59252cb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:35 EDT" name="tearDownR" finished-at="2023-05-27T21:50:35 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:35 EDT" name="setUp" finished-at="2023-05-27T21:50:43 EDT" duration-ms="7968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:43 EDT" name="startExtent" finished-at="2023-05-27T21:50:43 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyUpdateAnItem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyUpdateAnItem()[pri:4, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:43 EDT" name="verifyUpdateAnItem" finished-at="2023-05-27T21:50:53 EDT" duration-ms="10045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateAnItem -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:53 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:50:54 EDT" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdateAnItem status=SUCCESS method=AddToCartTest.verifyUpdateAnItem()[pri:4, instance:tutorialsNinja.AddToCartTest@59252cb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:54 EDT" name="tearDownR" finished-at="2023-05-27T21:50:54 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:50:54 EDT" name="setUp" finished-at="2023-05-27T21:51:00 EDT" duration-ms="6608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:00 EDT" name="startExtent" finished-at="2023-05-27T21:51:00 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:00 EDT" name="verifyPrdctUpdtQunt" data-provider="quantityUpdate" finished-at="2023-05-27T21:51:12 EDT" duration-ms="11310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrdctUpdtQunt -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:12 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:51:12 EDT" duration-ms="809" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrdctUpdtQunt status=SUCCESS method=AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@59252cb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:12 EDT" name="tearDownR" finished-at="2023-05-27T21:51:12 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:12 EDT" name="setUp" finished-at="2023-05-27T21:51:21 EDT" duration-ms="8931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:21 EDT" name="startExtent" finished-at="2023-05-27T21:51:21 EDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:21 EDT" name="verifyPrdctUpdtQunt" data-provider="quantityUpdate" finished-at="2023-05-27T21:51:33 EDT" duration-ms="11687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrdctUpdtQunt -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:33 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:51:33 EDT" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrdctUpdtQunt status=SUCCESS method=AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@59252cb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:33 EDT" name="tearDownR" finished-at="2023-05-27T21:51:33 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:33 EDT" name="setUp" finished-at="2023-05-27T21:51:39 EDT" duration-ms="6065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:39 EDT" name="startExtent" finished-at="2023-05-27T21:51:39 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:39 EDT" name="verifyPrdctUpdtQunt" data-provider="quantityUpdate" finished-at="2023-05-27T21:51:52 EDT" duration-ms="12788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrdctUpdtQunt -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:52 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:51:53 EDT" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrdctUpdtQunt status=SUCCESS method=AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@59252cb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:53 EDT" name="tearDownR" finished-at="2023-05-27T21:51:53 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:53 EDT" name="setUp" finished-at="2023-05-27T21:51:59 EDT" duration-ms="6714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:59 EDT" name="startExtent" finished-at="2023-05-27T21:51:59 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.addPrdctsFrmPrdctCmprsnHmPge()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addPrdctsFrmPrdctCmprsnHmPge()[pri:7, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:51:59 EDT" name="addPrdctsFrmPrdctCmprsnHmPge" finished-at="2023-05-27T21:52:08 EDT" duration-ms="8469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPrdctsFrmPrdctCmprsnHmPge -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:52:08 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:52:08 EDT" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPrdctsFrmPrdctCmprsnHmPge status=SUCCESS method=AddToCartTest.addPrdctsFrmPrdctCmprsnHmPge()[pri:7, instance:tutorialsNinja.AddToCartTest@59252cb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@59252cb6]" started-at="2023-05-27T21:52:08 EDT" name="tearDownR" finished-at="2023-05-27T21:52:08 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.AddToCartTest -->
    </test> <!--  AddToCartTest -->
    <test started-at="2023-05-27T21:52:08 EDT" name=" WishListTest" finished-at="2023-05-27T21:52:24 EDT" duration-ms="15851">
      <class name="tutorialsNinja.WishListTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:tutorialsNinja.WishListTest@4dc8caa7]" started-at="2023-05-27T21:43:58 EDT" name="extentSetup" finished-at="2023-05-27T21:43:58 EDT" duration-ms="295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@28817763]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\My Pc\eclipse-workspace\Final_exam_Selenium\test-output\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.WishListTest@4dc8caa7]" started-at="2023-05-27T21:52:08 EDT" name="setUp" finished-at="2023-05-27T21:52:17 EDT" duration-ms="8228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.WishListTest@4dc8caa7]" started-at="2023-05-27T21:52:17 EDT" name="startExtent" finished-at="2023-05-27T21:52:17 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.WishListTest.addItmsTWhshLstWthtLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addItmsTWhshLstWthtLogin()[pri:2, instance:tutorialsNinja.WishListTest@4dc8caa7]" started-at="2023-05-27T21:52:17 EDT" name="addItmsTWhshLstWthtLogin" finished-at="2023-05-27T21:52:24 EDT" duration-ms="7240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItmsTWhshLstWthtLogin -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.WishListTest@4dc8caa7]" started-at="2023-05-27T21:52:24 EDT" name="afterEachTestMethod" finished-at="2023-05-27T21:52:24 EDT" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addItmsTWhshLstWthtLogin status=SUCCESS method=WishListTest.addItmsTWhshLstWthtLogin()[pri:2, instance:tutorialsNinja.WishListTest@4dc8caa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.WishListTest@4dc8caa7]" started-at="2023-05-27T21:52:24 EDT" name="tearDownR" finished-at="2023-05-27T21:52:24 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:tutorialsNinja.WishListTest@4dc8caa7]" started-at="2023-05-27T21:52:24 EDT" name="generateReport" finished-at="2023-05-27T21:52:24 EDT" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- tutorialsNinja.WishListTest -->
    </test> <!--  WishListTest -->
  </suite> <!-- tutorialsNinja test -->
</testng-results>
