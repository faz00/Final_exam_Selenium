<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="38" passed="33" failed="5" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\My Pc\eclipse-workspace\Final_exam_Selenium\test-output\html]]>
    </line>
  </reporter-output>
  <suite started-at="2023-05-26T12:36:56 EDT" name="tutorialsNinja test" finished-at="2023-05-26T12:44:15 EDT" duration-ms="439726">
    <groups>
      <group name="addProductsToCartTest">
        <method signature="AddToCartTest.verifyUserNavigateTShoppingCartHmPge()[pri:1, instance:tutorialsNinja.AddToCartTest@40844aab]" name="verifyUserNavigateTShoppingCartHmPge" class="tutorialsNinja.AddToCartTest"/>
        <method signature="AddToCartTest.verifyAddingItemToCart()[pri:2, instance:tutorialsNinja.AddToCartTest@40844aab]" name="verifyAddingItemToCart" class="tutorialsNinja.AddToCartTest"/>
        <method signature="AddToCartTest.VerifyRemoveAnItemFromCart()[pri:3, instance:tutorialsNinja.AddToCartTest@40844aab]" name="VerifyRemoveAnItemFromCart" class="tutorialsNinja.AddToCartTest"/>
        <method signature="AddToCartTest.verifyUpdateAnItem()[pri:4, instance:tutorialsNinja.AddToCartTest@40844aab]" name="verifyUpdateAnItem" class="tutorialsNinja.AddToCartTest"/>
      </group> <!-- addProductsToCartTest -->
      <group name="searchTests">
        <method signature="SearchProductsTest.verifySearchWithANonExistingProduct()[pri:1, instance:tutorialsNinja.SearchProductsTest@44b3606b]" name="verifySearchWithANonExistingProduct" class="tutorialsNinja.SearchProductsTest"/>
        <method signature="SearchProductsTest.verifySearchWithAnExistingProduct()[pri:2, instance:tutorialsNinja.SearchProductsTest@44b3606b]" name="verifySearchWithAnExistingProduct" class="tutorialsNinja.SearchProductsTest"/>
        <method signature="SearchProductsTest.verifyProductDisplayCount()[pri:3, instance:tutorialsNinja.SearchProductsTest@44b3606b]" name="verifyProductDisplayCount" class="tutorialsNinja.SearchProductsTest"/>
        <method signature="SearchProductsTest.verifyUsernavigatedToTHeSearchHomePage()[pri:4, instance:tutorialsNinja.SearchProductsTest@44b3606b]" name="verifyUsernavigatedToTHeSearchHomePage" class="tutorialsNinja.SearchProductsTest"/>
      </group> <!-- searchTests -->
      <group name="checkoutNavTest">
        <method signature="CheckoutTest.verifyUserNavigateToCheckoutHomePge()[pri:1, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" name="verifyUserNavigateToCheckoutHomePge" class="tutorialsNinja.CheckoutTest"/>
      </group> <!-- checkoutNavTest -->
      <group name="verifyProductsQntTest">
        <method signature="AddToCartTest.verifyAddingDuplicatePrdctsTCrt()[pri:6, instance:tutorialsNinja.AddToCartTest@40844aab]" name="verifyAddingDuplicatePrdctsTCrt" class="tutorialsNinja.AddToCartTest"/>
      </group> <!-- verifyProductsQntTest -->
      <group name="loginTests">
        <method signature="LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478]" name="testLoginWithCredentials" class="tutorialsNinja.LoginTest"/>
        <method signature="LoginTest.verifyTheNumberOfUnsuccessfulLoginAttempts()[pri:2, instance:tutorialsNinja.LoginTest@7a1a3478]" name="verifyTheNumberOfUnsuccessfulLoginAttempts" class="tutorialsNinja.LoginTest"/>
        <method signature="LoginTest.checkPasswordVisibility()[pri:3, instance:tutorialsNinja.LoginTest@7a1a3478]" name="checkPasswordVisibility" class="tutorialsNinja.LoginTest"/>
      </group> <!-- loginTests -->
      <group name="resetPasswordTests">
        <method signature="ForgottenPasswordTest.resetPassForNonRegistredUsers(java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" name="resetPassForNonRegistredUsers" class="tutorialsNinja.ForgottenPasswordTest"/>
        <method signature="ForgottenPasswordTest.resetPasswordWithoutEmail()[pri:4, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" name="resetPasswordWithoutEmail" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- resetPasswordTests -->
      <group name="navigationTests">
        <method signature="ForgottenPasswordTest.verifyUserNavigatesToTheForgotPasswordPage(java.lang.String)[pri:1, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" name="verifyUserNavigatesToTheForgotPasswordPage" class="tutorialsNinja.ForgottenPasswordTest"/>
        <method signature="ForgottenPasswordTest.verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd()[pri:2, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" name="verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- navigationTests -->
      <group name="passwordSecurity">
        <method signature="RegisterTest.VerifyThePasswordNotVisibleToTheSourcePage()[pri:4, instance:tutorialsNinja.RegisterTest@ff684e1]" name="VerifyThePasswordNotVisibleToTheSourcePage" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- passwordSecurity -->
      <group name="navigation">
        <method signature="RegisterTest.VerifyDifferentWaysToNavigateToTheRegisterPage()[pri:5, instance:tutorialsNinja.RegisterTest@ff684e1]" name="VerifyDifferentWaysToNavigateToTheRegisterPage" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- navigation -->
      <group name="ui">
        <method signature="ForgottenPasswordTest.verifyForgottenPasswordPageUI()[pri:6, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" name="verifyForgottenPasswordPageUI" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- ui -->
      <group name="checkoutTest">
        <method signature="CheckoutTest.verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" name="verifyCouponfonctionality" class="tutorialsNinja.CheckoutTest"/>
        <method signature="CheckoutTest.verifycouponFieldPlaceHolder()[pri:3, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" name="verifycouponFieldPlaceHolder" class="tutorialsNinja.CheckoutTest"/>
      </group> <!-- checkoutTest -->
      <group name="placeHolderTests">
        <method signature="ForgottenPasswordTest.verifyThePlaceHoldText()[pri:5, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" name="verifyThePlaceHoldText" class="tutorialsNinja.ForgottenPasswordTest"/>
      </group> <!-- placeHolderTests -->
      <group name="placeHoldersTest">
        <method signature="LoginTest.testLoginFieldsPlaceholders()[pri:4, instance:tutorialsNinja.LoginTest@7a1a3478]" name="testLoginFieldsPlaceholders" class="tutorialsNinja.LoginTest"/>
      </group> <!-- placeHoldersTest -->
      <group name="registration">
        <method signature="RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@ff684e1]" name="registerWithCredentials" class="tutorialsNinja.RegisterTest"/>
        <method signature="RegisterTest.registerWithInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:tutorialsNinja.RegisterTest@ff684e1]" name="registerWithInvalidPhoneNumber" class="tutorialsNinja.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisterWithAnExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.RegisterTest@ff684e1]" name="verifyRegisterWithAnExistingEmailAddress" class="tutorialsNinja.RegisterTest"/>
        <method signature="RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@ff684e1]" name="checkPrivacyPolicyCheckBox" class="tutorialsNinja.RegisterTest"/>
      </group> <!-- registration -->
      <group name="updateProductsQntTest">
        <method signature="AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@40844aab]" name="verifyPrdctUpdtQunt" class="tutorialsNinja.AddToCartTest"/>
      </group> <!-- updateProductsQntTest -->
    </groups>
    <test started-at="2023-05-26T12:36:56 EDT" name=" LoginTest" finished-at="2023-05-26T12:38:23 EDT" duration-ms="87554">
      <class name="tutorialsNinja.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:36:56 EDT" name="setUp" finished-at="2023-05-26T12:37:21 EDT" duration-ms="25260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:21 EDT" name="startExtent" finished-at="2023-05-26T12:37:21 EDT" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:21 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-26T12:37:22 EDT" duration-ms="1530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:22 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:37:24 EDT" duration-ms="1380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:24 EDT" name="tearDownR" finished-at="2023-05-26T12:37:24 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:24 EDT" name="setUp" finished-at="2023-05-26T12:37:32 EDT" duration-ms="8479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:32 EDT" name="startExtent" finished-at="2023-05-26T12:37:32 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:32 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-26T12:37:33 EDT" duration-ms="896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sun@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:33 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:37:34 EDT" duration-ms="437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:34 EDT" name="tearDownR" finished-at="2023-05-26T12:37:34 EDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:34 EDT" name="setUp" finished-at="2023-05-26T12:37:41 EDT" duration-ms="7846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:41 EDT" name="startExtent" finished-at="2023-05-26T12:37:41 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:41 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-26T12:37:43 EDT" duration-ms="1043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sun@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:43 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:37:43 EDT" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:43 EDT" name="tearDownR" finished-at="2023-05-26T12:37:43 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:43 EDT" name="setUp" finished-at="2023-05-26T12:37:48 EDT" duration-ms="5441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:48 EDT" name="startExtent" finished-at="2023-05-26T12:37:48 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:48 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-26T12:37:49 EDT" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:49 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:37:50 EDT" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:50 EDT" name="tearDownR" finished-at="2023-05-26T12:37:50 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:50 EDT" name="setUp" finished-at="2023-05-26T12:37:55 EDT" duration-ms="5750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:55 EDT" name="startExtent" finished-at="2023-05-26T12:37:55 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:55 EDT" name="testLoginWithCredentials" data-provider="loginData" finished-at="2023-05-26T12:37:56 EDT" duration-ms="929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:56 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:37:57 EDT" duration-ms="440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCredentials status=SUCCESS method=LoginTest.testLoginWithCredentials(java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.LoginTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:57 EDT" name="tearDownR" finished-at="2023-05-26T12:37:57 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:37:57 EDT" name="setUp" finished-at="2023-05-26T12:38:03 EDT" duration-ms="6370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:03 EDT" name="startExtent" finished-at="2023-05-26T12:38:03 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.verifyTheNumberOfUnsuccessfulLoginAttempts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyTheNumberOfUnsuccessfulLoginAttempts()[pri:2, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:03 EDT" name="verifyTheNumberOfUnsuccessfulLoginAttempts" finished-at="2023-05-26T12:38:05 EDT" duration-ms="1984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheNumberOfUnsuccessfulLoginAttempts -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:05 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:38:06 EDT" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheNumberOfUnsuccessfulLoginAttempts status=SUCCESS method=LoginTest.verifyTheNumberOfUnsuccessfulLoginAttempts()[pri:2, instance:tutorialsNinja.LoginTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:06 EDT" name="tearDownR" finished-at="2023-05-26T12:38:06 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:06 EDT" name="setUp" finished-at="2023-05-26T12:38:14 EDT" duration-ms="8668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:14 EDT" name="startExtent" finished-at="2023-05-26T12:38:14 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.checkPasswordVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkPasswordVisibility()[pri:3, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:14 EDT" name="checkPasswordVisibility" finished-at="2023-05-26T12:38:15 EDT" duration-ms="1088" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Password is visible to the page source expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Password is visible to the page source expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at tutorialsNinja.LoginTest.checkPasswordVisibility(LoginTest.java:101)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPasswordVisibility -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:15 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:38:16 EDT" duration-ms="576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPasswordVisibility status=FAILURE method=LoginTest.checkPasswordVisibility()[pri:3, instance:tutorialsNinja.LoginTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:16 EDT" name="tearDownR" finished-at="2023-05-26T12:38:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:16 EDT" name="setUp" finished-at="2023-05-26T12:38:22 EDT" duration-ms="6477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:22 EDT" name="startExtent" finished-at="2023-05-26T12:38:22 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.LoginTest.testLoginFieldsPlaceholders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testLoginFieldsPlaceholders()[pri:4, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:22 EDT" name="testLoginFieldsPlaceholders" finished-at="2023-05-26T12:38:23 EDT" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFieldsPlaceholders -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:23 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:38:23 EDT" duration-ms="473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFieldsPlaceholders status=SUCCESS method=LoginTest.testLoginFieldsPlaceholders()[pri:4, instance:tutorialsNinja.LoginTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.LoginTest@7a1a3478]" started-at="2023-05-26T12:38:23 EDT" name="tearDownR" finished-at="2023-05-26T12:38:23 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.LoginTest -->
    </test> <!--  LoginTest -->
    <test started-at="2023-05-26T12:38:23 EDT" name=" RegisterTest" finished-at="2023-05-26T12:39:52 EDT" duration-ms="89242">
      <class name="tutorialsNinja.RegisterTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:23 EDT" name="setUp" finished-at="2023-05-26T12:38:29 EDT" duration-ms="5736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:29 EDT" name="startExtent" finished-at="2023-05-26T12:38:29 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:29 EDT" name="registerWithCredentials" data-provider="RegistrationData" finished-at="2023-05-26T12:38:32 EDT" duration-ms="2617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yellow]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:32 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:38:32 EDT" duration-ms="536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithCredentials status=SUCCESS method=RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@ff684e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:32 EDT" name="tearDownR" finished-at="2023-05-26T12:38:32 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:32 EDT" name="setUp" finished-at="2023-05-26T12:38:42 EDT" duration-ms="9809" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:42 EDT" name="startExtent" finished-at="2023-05-26T12:38:42 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:42 EDT" name="registerWithCredentials" data-provider="RegistrationData" finished-at="2023-05-26T12:38:45 EDT" duration-ms="3313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalidFirstName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inavalidlastname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sun@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abcd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sun]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sun]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:45 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:38:46 EDT" duration-ms="553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithCredentials status=SUCCESS method=RegisterTest.registerWithCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tutorialsNinja.RegisterTest@ff684e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:46 EDT" name="tearDownR" finished-at="2023-05-26T12:38:46 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:46 EDT" name="setUp" finished-at="2023-05-26T12:38:51 EDT" duration-ms="5254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:51 EDT" name="startExtent" finished-at="2023-05-26T12:38:51 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.registerWithInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="registerWithInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:51 EDT" name="registerWithInvalidPhoneNumber" data-provider="invalidPhoneNumberData" finished-at="2023-05-26T12:38:54 EDT" duration-ms="2696" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yellow]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abcd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The user is able to register with an invalid phone number expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The user is able to register with an invalid phone number expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at tutorialsNinja.RegisterTest.registerWithInvalidPhoneNumber(RegisterTest.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithInvalidPhoneNumber -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:54 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:38:54 EDT" duration-ms="642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithInvalidPhoneNumber status=FAILURE method=RegisterTest.registerWithInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:tutorialsNinja.RegisterTest@ff684e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:54 EDT" name="tearDownR" finished-at="2023-05-26T12:38:54 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:38:54 EDT" name="setUp" finished-at="2023-05-26T12:39:05 EDT" duration-ms="10767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:05 EDT" name="startExtent" finished-at="2023-05-26T12:39:05 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.verifyRegisterWithAnExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyRegisterWithAnExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:05 EDT" name="verifyRegisterWithAnExistingEmailAddress" data-provider="existingEmailAddressData" finished-at="2023-05-26T12:39:09 EDT" duration-ms="4316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yellow]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rezikabarech@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sun123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterWithAnExistingEmailAddress -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:09 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:39:11 EDT" duration-ms="1599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterWithAnExistingEmailAddress status=SUCCESS method=RegisterTest.verifyRegisterWithAnExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.RegisterTest@ff684e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:11 EDT" name="tearDownR" finished-at="2023-05-26T12:39:11 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:11 EDT" name="setUp" finished-at="2023-05-26T12:39:20 EDT" duration-ms="9391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:20 EDT" name="startExtent" finished-at="2023-05-26T12:39:20 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.VerifyThePasswordNotVisibleToTheSourcePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="VerifyThePasswordNotVisibleToTheSourcePage()[pri:4, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:20 EDT" name="VerifyThePasswordNotVisibleToTheSourcePage" finished-at="2023-05-26T12:39:22 EDT" duration-ms="1834" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[the password is visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: the password is visible expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at tutorialsNinja.RegisterTest.VerifyThePasswordNotVisibleToTheSourcePage(RegisterTest.java:136)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyThePasswordNotVisibleToTheSourcePage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:22 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:39:23 EDT" duration-ms="491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyThePasswordNotVisibleToTheSourcePage status=FAILURE method=RegisterTest.VerifyThePasswordNotVisibleToTheSourcePage()[pri:4, instance:tutorialsNinja.RegisterTest@ff684e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:23 EDT" name="tearDownR" finished-at="2023-05-26T12:39:23 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:23 EDT" name="setUp" finished-at="2023-05-26T12:39:28 EDT" duration-ms="5375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:28 EDT" name="startExtent" finished-at="2023-05-26T12:39:28 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.VerifyDifferentWaysToNavigateToTheRegisterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="VerifyDifferentWaysToNavigateToTheRegisterPage()[pri:5, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:28 EDT" name="VerifyDifferentWaysToNavigateToTheRegisterPage" finished-at="2023-05-26T12:39:32 EDT" duration-ms="3761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDifferentWaysToNavigateToTheRegisterPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:32 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:39:32 EDT" duration-ms="490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDifferentWaysToNavigateToTheRegisterPage status=SUCCESS method=RegisterTest.VerifyDifferentWaysToNavigateToTheRegisterPage()[pri:5, instance:tutorialsNinja.RegisterTest@ff684e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:32 EDT" name="tearDownR" finished-at="2023-05-26T12:39:32 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:32 EDT" name="setUp" finished-at="2023-05-26T12:39:39 EDT" duration-ms="6897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:39 EDT" name="startExtent" finished-at="2023-05-26T12:39:39 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:39 EDT" name="checkPrivacyPolicyCheckBox" data-provider="privacyCheckBox" finished-at="2023-05-26T12:39:42 EDT" duration-ms="2874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[yes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPrivacyPolicyCheckBox -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:42 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:39:43 EDT" duration-ms="640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrivacyPolicyCheckBox status=SUCCESS method=RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@ff684e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:43 EDT" name="tearDownR" finished-at="2023-05-26T12:39:43 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:43 EDT" name="setUp" finished-at="2023-05-26T12:39:49 EDT" duration-ms="6244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:49 EDT" name="startExtent" finished-at="2023-05-26T12:39:49 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:49 EDT" name="checkPrivacyPolicyCheckBox" data-provider="privacyCheckBox" finished-at="2023-05-26T12:39:52 EDT" duration-ms="2794" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The user should not be able to register when the privacy policy checkbox is not selected expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The user should not be able to register when the privacy policy checkbox is not selected expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at tutorialsNinja.RegisterTest.checkPrivacyPolicyCheckBox(RegisterTest.java:220)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPrivacyPolicyCheckBox -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:52 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:39:52 EDT" duration-ms="566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrivacyPolicyCheckBox status=FAILURE method=RegisterTest.checkPrivacyPolicyCheckBox(java.lang.String)[pri:6, instance:tutorialsNinja.RegisterTest@ff684e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.RegisterTest@ff684e1]" started-at="2023-05-26T12:39:52 EDT" name="tearDownR" finished-at="2023-05-26T12:39:52 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.RegisterTest -->
    </test> <!--  RegisterTest -->
    <test started-at="2023-05-26T12:39:53 EDT" name=" ForgottenPasswordTest" finished-at="2023-05-26T12:40:38 EDT" duration-ms="45297">
      <class name="tutorialsNinja.ForgottenPasswordTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:39:53 EDT" name="setUp" finished-at="2023-05-26T12:39:59 EDT" duration-ms="6757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:39:59 EDT" name="startExtent" finished-at="2023-05-26T12:39:59 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.verifyUserNavigatesToTheForgotPasswordPage(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyUserNavigatesToTheForgotPasswordPage(java.lang.String)[pri:1, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:39:59 EDT" name="verifyUserNavigatesToTheForgotPasswordPage" data-provider="forgotPasswordData" finished-at="2023-05-26T12:40:01 EDT" duration-ms="1601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserNavigatesToTheForgotPasswordPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:01 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:40:01 EDT" duration-ms="367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserNavigatesToTheForgotPasswordPage status=SUCCESS method=ForgottenPasswordTest.verifyUserNavigatesToTheForgotPasswordPage(java.lang.String)[pri:1, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:01 EDT" name="tearDownR" finished-at="2023-05-26T12:40:01 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:01 EDT" name="setUp" finished-at="2023-05-26T12:40:06 EDT" duration-ms="5192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:06 EDT" name="startExtent" finished-at="2023-05-26T12:40:06 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd()[pri:2, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:06 EDT" name="verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd" finished-at="2023-05-26T12:40:08 EDT" duration-ms="1162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:08 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:40:08 EDT" duration-ms="342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd status=SUCCESS method=ForgottenPasswordTest.verifyLgnPgeAftrBackBtnClkOnFrgtPaswrd()[pri:2, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:08 EDT" name="tearDownR" finished-at="2023-05-26T12:40:08 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:08 EDT" name="setUp" finished-at="2023-05-26T12:40:13 EDT" duration-ms="5279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:13 EDT" name="startExtent" finished-at="2023-05-26T12:40:13 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.resetPassForNonRegistredUsers(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="resetPassForNonRegistredUsers(java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:13 EDT" name="resetPassForNonRegistredUsers" data-provider="emailData" finished-at="2023-05-26T12:40:16 EDT" duration-ms="2935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunflower"+ generateTimeStamp()+"@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sun@]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetPassForNonRegistredUsers -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:16 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:40:17 EDT" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetPassForNonRegistredUsers status=SUCCESS method=ForgottenPasswordTest.resetPassForNonRegistredUsers(java.lang.String,java.lang.String)[pri:3, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:17 EDT" name="tearDownR" finished-at="2023-05-26T12:40:17 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:17 EDT" name="setUp" finished-at="2023-05-26T12:40:22 EDT" duration-ms="5316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:22 EDT" name="startExtent" finished-at="2023-05-26T12:40:22 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.resetPasswordWithoutEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="resetPasswordWithoutEmail()[pri:4, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:22 EDT" name="resetPasswordWithoutEmail" finished-at="2023-05-26T12:40:23 EDT" duration-ms="1196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetPasswordWithoutEmail -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:23 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:40:23 EDT" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetPasswordWithoutEmail status=SUCCESS method=ForgottenPasswordTest.resetPasswordWithoutEmail()[pri:4, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:23 EDT" name="tearDownR" finished-at="2023-05-26T12:40:23 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:23 EDT" name="setUp" finished-at="2023-05-26T12:40:30 EDT" duration-ms="6122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:30 EDT" name="startExtent" finished-at="2023-05-26T12:40:30 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.verifyThePlaceHoldText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyThePlaceHoldText()[pri:5, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:30 EDT" name="verifyThePlaceHoldText" finished-at="2023-05-26T12:40:30 EDT" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePlaceHoldText -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:30 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:40:31 EDT" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePlaceHoldText status=SUCCESS method=ForgottenPasswordTest.verifyThePlaceHoldText()[pri:5, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:31 EDT" name="tearDownR" finished-at="2023-05-26T12:40:31 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:31 EDT" name="setUp" finished-at="2023-05-26T12:40:37 EDT" duration-ms="6165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:37 EDT" name="startExtent" finished-at="2023-05-26T12:40:37 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.ForgottenPasswordTest.verifyForgottenPasswordPageUI()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyForgottenPasswordPageUI()[pri:6, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:37 EDT" name="verifyForgottenPasswordPageUI" finished-at="2023-05-26T12:40:38 EDT" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgottenPasswordPageUI -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:38 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:40:38 EDT" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgottenPasswordPageUI status=SUCCESS method=ForgottenPasswordTest.verifyForgottenPasswordPageUI()[pri:6, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.ForgottenPasswordTest@628c4ac0]" started-at="2023-05-26T12:40:38 EDT" name="tearDownR" finished-at="2023-05-26T12:40:38 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.ForgottenPasswordTest -->
    </test> <!--  ForgottenPasswordTest -->
    <test started-at="2023-05-26T12:40:38 EDT" name=" SearchProductsTest" finished-at="2023-05-26T12:41:19 EDT" duration-ms="40783">
      <class name="tutorialsNinja.SearchProductsTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:38 EDT" name="setUp" finished-at="2023-05-26T12:40:47 EDT" duration-ms="8834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:47 EDT" name="startExtent" finished-at="2023-05-26T12:40:47 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.SearchProductsTest.verifySearchWithANonExistingProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifySearchWithANonExistingProduct()[pri:1, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:47 EDT" name="verifySearchWithANonExistingProduct" finished-at="2023-05-26T12:40:48 EDT" duration-ms="989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithANonExistingProduct -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:48 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:40:48 EDT" duration-ms="503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchWithANonExistingProduct status=SUCCESS method=SearchProductsTest.verifySearchWithANonExistingProduct()[pri:1, instance:tutorialsNinja.SearchProductsTest@44b3606b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:48 EDT" name="tearDownR" finished-at="2023-05-26T12:40:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:48 EDT" name="setUp" finished-at="2023-05-26T12:40:56 EDT" duration-ms="7928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:56 EDT" name="startExtent" finished-at="2023-05-26T12:40:56 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.SearchProductsTest.verifySearchWithAnExistingProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifySearchWithAnExistingProduct()[pri:2, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:56 EDT" name="verifySearchWithAnExistingProduct" finished-at="2023-05-26T12:40:58 EDT" duration-ms="1541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithAnExistingProduct -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:58 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:40:58 EDT" duration-ms="455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchWithAnExistingProduct status=SUCCESS method=SearchProductsTest.verifySearchWithAnExistingProduct()[pri:2, instance:tutorialsNinja.SearchProductsTest@44b3606b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:58 EDT" name="tearDownR" finished-at="2023-05-26T12:40:58 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:40:58 EDT" name="setUp" finished-at="2023-05-26T12:41:05 EDT" duration-ms="7285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:05 EDT" name="startExtent" finished-at="2023-05-26T12:41:05 EDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.SearchProductsTest.verifyProductDisplayCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyProductDisplayCount()[pri:3, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:05 EDT" name="verifyProductDisplayCount" finished-at="2023-05-26T12:41:08 EDT" duration-ms="2633" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Displayed product count doesn't match the selected count expected [100] but found [3]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Displayed product count doesn't match the selected count expected [100] but found [3]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1418)
at org.testng.Assert.assertEquals(Assert.java:1382)
at tutorialsNinja.SearchProductsTest.verifyProductDisplayCount(SearchProductsTest.java:116)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductDisplayCount -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:08 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:41:08 EDT" duration-ms="446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductDisplayCount status=FAILURE method=SearchProductsTest.verifyProductDisplayCount()[pri:3, instance:tutorialsNinja.SearchProductsTest@44b3606b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:08 EDT" name="tearDownR" finished-at="2023-05-26T12:41:09 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:09 EDT" name="setUp" finished-at="2023-05-26T12:41:17 EDT" duration-ms="8408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:17 EDT" name="startExtent" finished-at="2023-05-26T12:41:17 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.SearchProductsTest.verifyUsernavigatedToTHeSearchHomePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyUsernavigatedToTHeSearchHomePage()[pri:4, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:17 EDT" name="verifyUsernavigatedToTHeSearchHomePage" finished-at="2023-05-26T12:41:18 EDT" duration-ms="1305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsernavigatedToTHeSearchHomePage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:18 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:41:19 EDT" duration-ms="432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsernavigatedToTHeSearchHomePage status=SUCCESS method=SearchProductsTest.verifyUsernavigatedToTHeSearchHomePage()[pri:4, instance:tutorialsNinja.SearchProductsTest@44b3606b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.SearchProductsTest@44b3606b]" started-at="2023-05-26T12:41:19 EDT" name="tearDownR" finished-at="2023-05-26T12:41:19 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.SearchProductsTest -->
    </test> <!--  SearchProductsTest -->
    <test started-at="2023-05-26T12:41:19 EDT" name=" CheckoutTest" finished-at="2023-05-26T12:42:20 EDT" duration-ms="61353">
      <class name="tutorialsNinja.CheckoutTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:19 EDT" name="setUp" finished-at="2023-05-26T12:41:29 EDT" duration-ms="10256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:29 EDT" name="startExtent" finished-at="2023-05-26T12:41:29 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verifyUserNavigateToCheckoutHomePge()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyUserNavigateToCheckoutHomePge()[pri:1, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:29 EDT" name="verifyUserNavigateToCheckoutHomePge" finished-at="2023-05-26T12:41:30 EDT" duration-ms="1155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserNavigateToCheckoutHomePge -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:30 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:41:31 EDT" duration-ms="575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserNavigateToCheckoutHomePge status=SUCCESS method=CheckoutTest.verifyUserNavigateToCheckoutHomePge()[pri:1, instance:tutorialsNinja.CheckoutTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:31 EDT" name="tearDownR" finished-at="2023-05-26T12:41:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:31 EDT" name="setUp" finished-at="2023-05-26T12:41:39 EDT" duration-ms="8255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:39 EDT" name="startExtent" finished-at="2023-05-26T12:41:39 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verifyCouponfonctionality(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:39 EDT" name="verifyCouponfonctionality" data-provider="couponCodes" finished-at="2023-05-26T12:41:48 EDT" duration-ms="9378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xyz123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCouponfonctionality -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:48 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:41:49 EDT" duration-ms="573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCouponfonctionality status=SUCCESS method=CheckoutTest.verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:49 EDT" name="tearDownR" finished-at="2023-05-26T12:41:49 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:49 EDT" name="setUp" finished-at="2023-05-26T12:41:57 EDT" duration-ms="7982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:57 EDT" name="startExtent" finished-at="2023-05-26T12:41:57 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verifyCouponfonctionality(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:41:57 EDT" name="verifyCouponfonctionality" data-provider="couponCodes" finished-at="2023-05-26T12:42:06 EDT" duration-ms="8660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCouponfonctionality -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:42:06 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:42:06 EDT" duration-ms="397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCouponfonctionality status=SUCCESS method=CheckoutTest.verifyCouponfonctionality(java.lang.String)[pri:2, instance:tutorialsNinja.CheckoutTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:42:06 EDT" name="tearDownR" finished-at="2023-05-26T12:42:06 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:42:06 EDT" name="setUp" finished-at="2023-05-26T12:42:12 EDT" duration-ms="6293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:42:12 EDT" name="startExtent" finished-at="2023-05-26T12:42:12 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.CheckoutTest.verifycouponFieldPlaceHolder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifycouponFieldPlaceHolder()[pri:3, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:42:12 EDT" name="verifycouponFieldPlaceHolder" finished-at="2023-05-26T12:42:20 EDT" duration-ms="7402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifycouponFieldPlaceHolder -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:42:20 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:42:20 EDT" duration-ms="409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifycouponFieldPlaceHolder status=SUCCESS method=CheckoutTest.verifycouponFieldPlaceHolder()[pri:3, instance:tutorialsNinja.CheckoutTest@9ef8eb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.CheckoutTest@9ef8eb7]" started-at="2023-05-26T12:42:20 EDT" name="tearDownR" finished-at="2023-05-26T12:42:20 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
      </class> <!-- tutorialsNinja.CheckoutTest -->
    </test> <!--  CheckoutTest -->
    <test started-at="2023-05-26T12:42:20 EDT" name=" AddToCartTest" finished-at="2023-05-26T12:44:15 EDT" duration-ms="115160">
      <class name="tutorialsNinja.AddToCartTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:36:55 EDT" name="extentSetup" finished-at="2023-05-26T12:36:56 EDT" duration-ms="488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1435b17]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\My Pc\eclipse-workspace\Final_exam_Selenium\test-output\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:20 EDT" name="setUp" finished-at="2023-05-26T12:42:26 EDT" duration-ms="6186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserNavigateTShoppingCartHmPge()[pri:1, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:26 EDT" name="verifyUserNavigateTShoppingCartHmPge" finished-at="2023-05-26T12:42:40 EDT" duration-ms="13461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserNavigateTShoppingCartHmPge -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:26 EDT" name="startExtent" finished-at="2023-05-26T12:42:26 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyUserNavigateTShoppingCartHmPge()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:40 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:42:41 EDT" duration-ms="1018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserNavigateTShoppingCartHmPge status=SUCCESS method=AddToCartTest.verifyUserNavigateTShoppingCartHmPge()[pri:1, instance:tutorialsNinja.AddToCartTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:41 EDT" name="tearDownR" finished-at="2023-05-26T12:42:41 EDT" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:41 EDT" name="setUp" finished-at="2023-05-26T12:42:47 EDT" duration-ms="6167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:47 EDT" name="startExtent" finished-at="2023-05-26T12:42:47 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyAddingItemToCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyAddingItemToCart()[pri:2, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:47 EDT" name="verifyAddingItemToCart" finished-at="2023-05-26T12:42:51 EDT" duration-ms="3862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddingItemToCart -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:51 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:42:51 EDT" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddingItemToCart status=SUCCESS method=AddToCartTest.verifyAddingItemToCart()[pri:2, instance:tutorialsNinja.AddToCartTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:51 EDT" name="tearDownR" finished-at="2023-05-26T12:42:51 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:51 EDT" name="setUp" finished-at="2023-05-26T12:42:57 EDT" duration-ms="6121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:57 EDT" name="startExtent" finished-at="2023-05-26T12:42:57 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.VerifyRemoveAnItemFromCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="VerifyRemoveAnItemFromCart()[pri:3, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:42:57 EDT" name="VerifyRemoveAnItemFromCart" finished-at="2023-05-26T12:43:04 EDT" duration-ms="6896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRemoveAnItemFromCart -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:04 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:43:05 EDT" duration-ms="478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyRemoveAnItemFromCart status=SUCCESS method=AddToCartTest.VerifyRemoveAnItemFromCart()[pri:3, instance:tutorialsNinja.AddToCartTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:05 EDT" name="tearDownR" finished-at="2023-05-26T12:43:05 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:05 EDT" name="setUp" finished-at="2023-05-26T12:43:10 EDT" duration-ms="5518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:10 EDT" name="startExtent" finished-at="2023-05-26T12:43:10 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyUpdateAnItem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyUpdateAnItem()[pri:4, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:10 EDT" name="verifyUpdateAnItem" finished-at="2023-05-26T12:43:17 EDT" duration-ms="7058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateAnItem -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:17 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:43:18 EDT" duration-ms="442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdateAnItem status=SUCCESS method=AddToCartTest.verifyUpdateAnItem()[pri:4, instance:tutorialsNinja.AddToCartTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:18 EDT" name="tearDownR" finished-at="2023-05-26T12:43:18 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:18 EDT" name="setUp" finished-at="2023-05-26T12:43:23 EDT" duration-ms="5541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:23 EDT" name="startExtent" finished-at="2023-05-26T12:43:23 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:23 EDT" name="verifyPrdctUpdtQunt" data-provider="quantityUpdate" finished-at="2023-05-26T12:43:31 EDT" duration-ms="7446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrdctUpdtQunt -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:31 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:43:31 EDT" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrdctUpdtQunt status=SUCCESS method=AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:31 EDT" name="tearDownR" finished-at="2023-05-26T12:43:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:31 EDT" name="setUp" finished-at="2023-05-26T12:43:37 EDT" duration-ms="5727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:37 EDT" name="startExtent" finished-at="2023-05-26T12:43:37 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:37 EDT" name="verifyPrdctUpdtQunt" data-provider="quantityUpdate" finished-at="2023-05-26T12:43:44 EDT" duration-ms="6782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrdctUpdtQunt -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:44 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:43:44 EDT" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrdctUpdtQunt status=SUCCESS method=AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:44 EDT" name="tearDownR" finished-at="2023-05-26T12:43:44 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:44 EDT" name="setUp" finished-at="2023-05-26T12:43:52 EDT" duration-ms="7448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:52 EDT" name="startExtent" finished-at="2023-05-26T12:43:52 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:52 EDT" name="verifyPrdctUpdtQunt" data-provider="quantityUpdate" finished-at="2023-05-26T12:43:58 EDT" duration-ms="6802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrdctUpdtQunt -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:58 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:43:59 EDT" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrdctUpdtQunt status=SUCCESS method=AddToCartTest.verifyPrdctUpdtQunt(java.lang.String)[pri:5, instance:tutorialsNinja.AddToCartTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:59 EDT" name="tearDownR" finished-at="2023-05-26T12:43:59 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:43:59 EDT" name="setUp" finished-at="2023-05-26T12:44:04 EDT" duration-ms="5574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://tutorialsninja.com/demo/index.php?route=account/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:44:04 EDT" name="startExtent" finished-at="2023-05-26T12:44:04 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tutorialsNinja.AddToCartTest.verifyAddingDuplicatePrdctsTCrt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="verifyAddingDuplicatePrdctsTCrt()[pri:6, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:44:04 EDT" name="verifyAddingDuplicatePrdctsTCrt" finished-at="2023-05-26T12:44:15 EDT" duration-ms="10587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddingDuplicatePrdctsTCrt -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:44:15 EDT" name="afterEachTestMethod" finished-at="2023-05-26T12:44:15 EDT" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddingDuplicatePrdctsTCrt status=SUCCESS method=AddToCartTest.verifyAddingDuplicatePrdctsTCrt()[pri:6, instance:tutorialsNinja.AddToCartTest@40844aab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDownR()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:44:15 EDT" name="tearDownR" finished-at="2023-05-26T12:44:15 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownR -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:tutorialsNinja.AddToCartTest@40844aab]" started-at="2023-05-26T12:44:15 EDT" name="generateReport" finished-at="2023-05-26T12:44:15 EDT" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- tutorialsNinja.AddToCartTest -->
    </test> <!--  AddToCartTest -->
  </suite> <!-- tutorialsNinja test -->
</testng-results>
